---

- name: Create k8s.conf
  file:
    path: /etc/sysctl.d/k8s.conf
    state: touch

- name: Fill k8s.conf
  command: echo -e 'net.bridge.bridge-nf-call-ip6tables = 1\nnet.bridge.bridge-nf-call-iptables = 1' > /etc/sysctl.d/k8s.conf

- name: Execute sysctl
  command: sysctl --system

- name: Install Depedencies
  apt:
    name: apt-transport-https
    state: present

- name: Install Depedencies
  apt:
    name: gnupg2
    state: present

- name: Add GPG key
  apt_key:
    url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
    state: present   

- name: Depedencie Kubernetes
  apt_repository:
    repo: 'deb https://apt.kubernetes.io/ kubernetes-xenial main'
    state: present

- name: Update System
  apt:
    update_cache: yes              

- name: Install kubectl
  apt:
    name: kubectl={{kubernetes.kubectl_version}}
    force: yes

- name: Install kubelet
  apt:
    name: kubelet={{kubernetes.kubelet_version}}
    force: yes

- name: Install kubeadm
  apt:
    name: kubeadm={{kubernetes.kubeadm_version}}
    force: yes
    
- name: Apt mark recent packages installation
  command: apt-mark hold kubelet kubeadm kubectl

- name: Generate UUID
  command: hostname
  register: hostname 

- name: Update Kubelet Config
  vars:
    mytext: |
        # Note: This dropin only works with kubeadm and kubelet v1.11+ 
        [Service] 
        Environment="KUBELET_KUBECONFIG_ARGS=--bootstrap-kubeconfig=/etc/kubernetes/bootstrap-kubelet.conf --kubeconfig=/etc/kubernetes/kubelet.conf"
        Environment="KUBELET_CONFIG_ARGS=--config=/var/lib/kubelet/config.yaml"
        Environment="KUBELET_EXTRA_ARGS=--node-labels=machine_name={{hostname.stdout}}"
        # This is a file that "kubeadm init" and "kubeadm join" generates at runtime, populating the KUBELET_KUBEADM_ARGS variable dynamically
        EnvironmentFile=-/var/lib/kubelet/kubeadm-flags.env
        # This is a file that the user can use for overrides of the kubelet args as a last resort. Preferably, the user should use
        # the .NodeRegistration.KubeletExtraArgs object in the configuration files instead. KUBELET_EXTRA_ARGS should be sourced from this file.
        EnvironmentFile=-/etc/default/kubelet
        ExecStart=
        ExecStart=/usr/bin/kubelet $KUBELET_KUBECONFIG_ARGS $KUBELET_CONFIG_ARGS $KUBELET_KUBEADM_ARGS $KUBELET_EXTRA_ARGS
  copy:
    content: "{{ mytext }}"
    dest: /etc/systemd/system/kubelet.service.d/10-kubeadm.conf